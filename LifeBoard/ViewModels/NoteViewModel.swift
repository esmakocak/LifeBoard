//
//  NoteViewModel.swift
//  LifeBoard
//
//  Created by Esma KoÃ§ak on 10.02.2025.
//

import Foundation
import CoreData
import SwiftUI

class NoteViewModel: ObservableObject {
    let context: NSManagedObjectContext

    @Published var notes: [Note] = [] // ðŸ“Œ CoreDataâ€™dan gelen notlarÄ± burada tutacaÄŸÄ±z
    
    init(context: NSManagedObjectContext) {
        self.context = context
        loadMockData() // ðŸ“Œ Åžimdilik mock verileri yÃ¼klÃ¼yoruz, sonra silebilirsin. !!!!!!!!!!
        fetchNotes() // ðŸ“Œ Uygulama aÃ§Ä±ldÄ±ÄŸÄ±nda CoreData'dan notlarÄ± Ã§ek
    }
    
    
    func addNote(text: String, subtext: String, color: Color, id: String, date: Date? = nil) {
        let newNote = Note(context: context)
        newNote.id = UUID()
        newNote.text = text
        newNote.subtext = subtext
        newNote.colorHex = color.toHex()
        newNote.date = Date()
        newNote.reminderDate = date

        saveContext()
        fetchNotes()
    }
    
    // âœ… CoreData'dan NotlarÄ± Ã‡ekme
    func fetchNotes() {
        let request: NSFetchRequest<Note> = Note.fetchRequest()
        request.sortDescriptors = [NSSortDescriptor(key: "date", ascending: false)] // En yeni not en Ã¼stte olsun
        
        do {
            notes = try context.fetch(request)
        } catch {
            print("NotlarÄ± Ã§ekerken hata oluÅŸtu: \(error.localizedDescription)")
        }
    }

    // âœ… CoreData'dan Not Silme
    func deleteNote(note: Note) {
        context.delete(note)
        saveContext()
        fetchNotes()
    }

    // âœ… CoreData'ya DeÄŸiÅŸiklikleri Kaydetme
    func saveContext() {
        do {
            try context.save()
        } catch {
            print("Kaydetme hatasÄ±: \(error.localizedDescription)")
        }
    }
    
    // ðŸ”¹ **Mock Verileri YÃ¼kleme (GeÃ§ici)** !!!!!!!!!!!!!!!!!!!!!
    private func loadMockData() {
        notes = [
            createMockNote(text: "DiÅŸÃ§i Randevusu", subtext: "YarÄ±n 10:30'da randevum var.", colorHex: "#bde0fe", reminder: nil),
            createMockNote(text: "ToplantÄ± NotlarÄ±", subtext: "Pazartesi yapÄ±lacak olan ekip toplantÄ±sÄ±na hazÄ±rlÄ±k.", colorHex: "#e2c4f2", reminder: nil),
            createMockNote(text: "AlÄ±ÅŸveriÅŸ Listesi", subtext: "SÃ¼t, ekmek, yumurta, peynir, kahve", colorHex: "#ffc8dd", reminder: nil),
            createMockNote(text: "AlÄ±ÅŸveriÅŸ Listesi", subtext: "YarÄ±n 10:30'da randevum var.", colorHex: "#ffc8dd", reminder: nil),
            createMockNote(text: "ToplantÄ± NotlarÄ±",subtext: "Pazartesi yapÄ±lacak olan ekip toplantÄ±sÄ±na hazÄ±rlÄ±k.", colorHex: "#e2c4f2", reminder: nil),
            createMockNote(text: "DiÅŸÃ§i Randevusu", subtext: "SÃ¼t, ekmek, yumurta, peynir, kahve", colorHex: "#bde0fe", reminder: nil),
        ]
    }

    private func createMockNote(text: String, subtext: String ,colorHex: String, reminder: Date?) -> Note {
        let newNote = Note(context: context)
        newNote.id = UUID()
        newNote.text = text
        newNote.subtext = subtext
        newNote.colorHex = colorHex
        newNote.reminderDate = reminder
        newNote.date = Date()
        return newNote
    }
    
    
}

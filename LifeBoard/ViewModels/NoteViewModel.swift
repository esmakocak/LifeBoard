//
//  NoteViewModel.swift
//  LifeBoard
//
//  Created by Esma KoÃ§ak on 10.02.2025.
//

import Foundation
import CoreData
import SwiftUI

class NoteViewModel: ObservableObject {
    let context: NSManagedObjectContext

    @Published var notes: [Note] = [] // ðŸ“Œ CoreDataâ€™dan gelen notlarÄ± burada tutacaÄŸÄ±z
    
    init(context: NSManagedObjectContext) {
        self.context = context
        fetchNotes() // ðŸ“Œ Uygulama aÃ§Ä±ldÄ±ÄŸÄ±nda CoreData'dan notlarÄ± Ã§ek
    }

    // âœ… Not Ekleme Fonksiyonu
    func addNote(text: String, color: Color) {
        let newNote = Note(context: context)
        newNote.id = UUID()
        newNote.text = text
        newNote.colorHex = color.toHex()
        newNote.date = Date()

        saveContext()
        fetchNotes() // ðŸ“Œ GÃ¼ncellenmiÅŸ veriyi Ã§ek
    }
    
    // âœ… CoreData'dan NotlarÄ± Ã‡ekme
    func fetchNotes() {
        let request: NSFetchRequest<Note> = Note.fetchRequest()
        request.sortDescriptors = [NSSortDescriptor(key: "date", ascending: false)] // En yeni not en Ã¼stte olsun
        
        do {
            notes = try context.fetch(request)
        } catch {
            print("NotlarÄ± Ã§ekerken hata oluÅŸtu: \(error.localizedDescription)")
        }
    }

    // âœ… CoreData'dan Not Silme
    func deleteNote(note: Note) {
        context.delete(note)
        saveContext()
        fetchNotes()
    }

    // âœ… CoreData'ya DeÄŸiÅŸiklikleri Kaydetme
    func saveContext() {
        do {
            try context.save()
        } catch {
            print("Kaydetme hatasÄ±: \(error.localizedDescription)")
        }
    }
}
